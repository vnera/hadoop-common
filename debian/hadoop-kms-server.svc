# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
HADOOP_NAME="kms"
DAEMON="hadoop-$HADOOP_NAME-server"
DESC="Hadoop $HADOOP_NAME server"
EXEC_PATH="/usr/bin/hadoop"
SVC_USER="$HADOOP_NAME"
WORKING_DIR="/var/lib/hadoop-kms"
DAEMON_FLAGS="$HADOOP_NAME"
CONF_DIR="/etc/hadoop-${HADOOP_NAME}/conf"
PIDFILE="/var/run/hadoop-${HADOOP_NAME}/hadoop-$SVC_USER-$HADOOP_NAME-server.pid"
DEFAULTS_FILE="hadoop-$HADOOP_NAME"
PRIORITY=90

generate_status() {

cat <<'__EOT__'
checkstatusofproc(){
  su -s /bin/bash ${SVC_USER} -c "${EXEC_PATH} --config ${CONF_DIR} --daemon status ${DAEMON_FLAGS}"
}
__EOT__

}

generate_start() {

cat <<'__EOT__'
start() {
  [ -x $EXEC_PATH ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -d $CONF_DIR ] || exit $ERROR_PROGRAM_NOT_CONFIGURED

  export HADOOP_LOG_DIR=${HADOOP_LOG_DIR:-${KMS_LOG}}
  su -p -s /bin/bash -c "${EXEC_PATH} --config '$CONF_DIR' --daemon start ${DAEMON_FLAGS}" $SVC_USER

  for second in {5..0}
  do
    checkstatusofproc
    RETVAL=$?
    if [ "$RETVAL" -eq $RETVAL_SUCCESS ] ; then
	  break
    fi
    sleep 1
  done


  if [ $RETVAL -eq $STATUS_RUNNING ]; then
    touch $LOCKFILE
    log_success_msg "Started ${DESC} (${DAEMON}): "
  else
    log_failure_msg "Failed to start ${DESC}. Return value: $RETVAL"
  fi

  return $RETVAL
}
__EOT__

}

generate_stop() {

cat <<'__EOT__'
stop() {
	
  export KMS_TEMP="$(dirname $PIDFILE)"
	
  # FIXME: workaround for BIGTOP-537
  checkstatusofproc
  if [ "$?" = "$STATUS_RUNNING" ] ; then
    su -s /bin/bash $SVC_USER -c "${EXEC_PATH} --config '$CONF_DIR' --daemon stop ${DAEMON_FLAGS}"
    RETVAL=$?
  else
    RETVAL=$RETVAL_SUCCESS
  fi

  if [ $RETVAL -eq $RETVAL_SUCCESS ]; then
    log_success_msg "Stopped ${DESC}: "
    rm -f $LOCKFILE $PIDFILE
  else
    log_failure_msg "Failure to stop ${DESC}. Return value: $RETVAL"
  fi
}
__EOT__

}
